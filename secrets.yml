---
# file: secrets.yml
- hosts: local
  vars:
    target_dir: ./generated
    secrets_dir: '{{ target_dir}}/secrets'
    vaults_dir: '{{ target_dir }}/vaults'
    private_keypair_names:
      - private1
      - private2
  tasks:

    - name: initialize generated directories
      file: 
        path: '{{ item }}'
        state: directory
      loop:
        - '{{ secrets_dir}}'
        - '{{ vaults_dir}}'

    - name: generate private_keypairs
      command: |
        ssh-keygen -t rsa -b 4096 -N '' -f {{ secrets_dir }}/{{ item }}
      args:
        creates: '{{ secrets_dir }}/{{ item }}'
      loop: '{{ private_keypair_names }}'

    - name: check for privatekeys vault
      stat: path='{{ vaults_dir }}/vaulted-keys.yml'
      register: vaulted_keys_stat

    - name: build privatekeys vault
      shell: |
        cat {{ secrets_dir }}/{{ private_keypair_name }} |
        ansible-vault encrypt_string \
          --stdin-name={{ private_keypair_name }} \
        >> {{ vaults_dir }}/vaulted-keys.yml
      loop: '{{ private_keypair_names }}'
      loop_control:
        loop_var: private_keypair_name
      when: not vaulted_keys_stat.stat.exists

    - name: include_vars from vaulted-keys
      include_vars:
        file: '{{ vaults_dir }}/vaulted-keys.yml'
        name: vaulted_keys

    # - name: loop through vaulted_keys items (key,value)
    #   debug:
    #     msg: key '{{ item.key }}' value '{{ item.value[0:25] }}'
    #   loop: '{{ vaulted_keys | dict2items }}'

    # - name: loop through vaulted_keys items (key, b64encode(value))
    #   debug:
    #     msg: key '{{ item.key }}' value '{{ item.value[0:25] | b64encode }}'
    #   loop: '{{ vaulted_keys | dict2items }}'

    # - name: get a privatekey value
    #   debug:
    #     msg: privatekey value '{{ item.value[0:25]}}'
    #   loop: '{{ vaulted_keys | dict2items}}'
